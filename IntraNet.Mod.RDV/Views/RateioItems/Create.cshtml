@model IntraNet.Mod.RDV.Models.ViewModel.RateioItemViewModel

@{
    ViewBag.Title = "Create";
    Layout = null;
}

@using (Html.BeginForm("Create", "RateioItems", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4><i class="glyphicon glyphicon-plus">&nbsp;</i>Adicionar Item de Rateio</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <hr />
        <h5>Formulário para cadastro:</h5>
        <hr />
        <div class="alert alert-danger" id="AlertRateio">

        </div>
        <div class="row">

            <div class="form-group" style="padding-left: 5%">

                <div class="col-md-3">
                    @Html.Label("C.Custo:", htmlAttributes: new {@class = "control-label col-md-2"})
                    @Html.DropDownList("SolicitaCCustoId", null, "Selecione", new {@class = "form-control", @onchange = "CCustoSelector()"})    
                </div>

                <div class="col-md-2">
                    @Html.LabelFor(model => model.EmpCCustoId, "Codigo:", htmlAttributes: new {@class = "control-label col-md-2"})
                    @Html.DropDownListFor(model => model.EmpCCustoId, null, "000000", new {@class = "form-control", @disabled = "disabled", @placeholder = "0000000"})
                </div>

                <div class="col-md-2">
                    @Html.LabelFor(model => model.Item, htmlAttributes: new {@class = "control-label col-md-2"})
                    @Html.EditorFor(model => model.Item, new {htmlAttributes = new {@class = "form-control", @disabled = "disabled", @Value = ViewBag.Item}})

                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.UnidadeClasse, "Classe", htmlAttributes: new {@class = "control-label col-md-4"})
                    @Html.DropDownListFor(model => model.UnidadeClasse,null,"Selecione a Unidade",  htmlAttributes : new {@class = "form-control"})

                </div>

            </div>

            <div class="row" style="padding-left: 5%">

                <div class="col-md-3">
                    @Html.Label("Prospect:", htmlAttributes: new {@class = "control-label col-md-3"})
                    @Html.EditorFor(model => model.Prospect, new {htmlAttributes = new {@class = "form-control", @disabled = "disabled", @placeholder="Descreva o prospect"}})
     
                </div>

                <div class="col-md-2">
                    @Html.Label("Porcentagem:", htmlAttributes: new {@class = "control-label col-md-8"})
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Porcentagem, null, new { htmlAttributes = new { @class = "form-control", @placeholder = "000", type = "number", min = 0, max = 100 } })
                    </div>

                </div>

                <div class="col-md-5" align="right">
                    <br/>
                    <button type="button" value="Salvar" id="Salvar" class="btn btn-default" onclick="CriarRateioController()"> Salvar &nbsp;<i class="glyphicon glyphicon-ok"></i></button>
                    <button type="button" value="Salvar" id="btnSolicCCAddCancel" class="btn btn-default" onclick="btnCamcelarRateio()"> Cancelar &nbsp;<i class="glyphicon glyphicon-remove"></i></button>
                </div>
                <br/>
            </div>
            
        </div>
        
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
