@model IntraNet.Mod.RDV.Models.ViewModel.EmpCCustoViewModel
@{
    //ViewBag.Title = "Create";
    Layout = null;
}
@using (Html.BeginForm(null, null, new{ id = "frm",name = "frm"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal row">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <h4><i class="glyphicon glyphicon-pencil"></i>&nbsp; Cadastrar Centro de custo</h4>
        <div class="alert alert-danger" id="Alert">
            
        </div>
        <div class="form-group row">
            
            <div class="col-md-2">
                @Html.LabelFor(model => model.CCusto,"C.Custo:", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CCusto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CCusto, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-2">
                @Html.LabelFor(model => model.CCustoDesc,"Descrição:", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.CCustoDesc,null, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CCustoDesc, "", new { @class = "text-danger" })
            </div>          


            <div class="col-md-2">
                @Html.LabelFor(model => model.EmpresaId, "Pertence:", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownList("EmpresaId",null, "Selecione", htmlAttributes: new { @class = "form-control", @onchange="UnidadeSelector()" })
                @Html.ValidationMessageFor(model => model.EmpresaId, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-1">
                @Html.LabelFor(model => model.Projeto, "Projeto:", htmlAttributes: new { @class = "control-label col-md-2" })
                <br/>
                <div class="checkbox row col-md-1">
                    @Html.CheckBoxFor(model => model.Projeto, htmlAttributes : new { @class="chxProjeto", @onchange= "ProjetoInsere()" })
                    @Html.ValidationMessageFor(model => model.Projeto, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="col-md-1">
                @Html.LabelFor(model => model.Prospect, "Prospect:", htmlAttributes: new { @class = "control-label col-md-2" })
                <br />
                <div class="checkbox row col-md-1">
                    @Html.CheckBoxFor(model => model.Prospect,  htmlAttributes : new { @class = "chxProspect" })
                    @Html.ValidationMessageFor(model => model.Prospect, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-2">
                @Html.LabelFor(model => model.Item,"Item:", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Item, new { htmlAttributes = new { @class = "form-control Item", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Item, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-2">
                @Html.LabelFor(model => model.UnidadeClasse, "Classe:", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownList("UnidadeClasse", null,"Selecione", htmlAttributes : new { @class = "form-control Classe", @disabled ="disabled" })
                @Html.ValidationMessageFor(model => model.UnidadeClasse, "", new { @class = "text-danger" })
            </div>          

            <div class="col-md-2">
                <input type="button" onclick="EmpCCustoModel()" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
    
}


